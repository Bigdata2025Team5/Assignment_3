SET MY_USER = CURRENT_USER();

SET GITHUB_SECRET_USERNAME = 'Bigdata2025Team5';
SET GITHUB_SECRET_PASSWORD = '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';
SET GITHUB_URL_PREFIX = 'https://github.com/Bigdata2025Team5';
SET GITHUB_REPO_ORIGIN = 'https://github.com/Bigdata2025Team5/Assignment_3.git';


-- ----------------------------------------------------------------------------
-- Create the account level objects (ACCOUNTADMIN part)
-- ----------------------------------------------------------------------------

USE ROLE ACCOUNTADMIN;

-- Roles
CREATE OR REPLACE ROLE CO2_ROLE;
GRANT ROLE CO2_ROLE TO ROLE SYSADMIN;
GRANT ROLE CO2_ROLE TO USER IDENTIFIER($MY_USER);

GRANT CREATE INTEGRATION ON ACCOUNT TO ROLE CO2_ROLE;
GRANT EXECUTE TASK ON ACCOUNT TO ROLE CO2_ROLE;
GRANT EXECUTE MANAGED TASK ON ACCOUNT TO ROLE CO2_ROLE;
GRANT MONITOR EXECUTION ON ACCOUNT TO ROLE CO2_ROLE;
GRANT IMPORTED PRIVILEGES ON DATABASE SNOWFLAKE TO ROLE CO2_ROLE;

-- Databases
CREATE OR REPLACE DATABASE CO2_DB;
GRANT OWNERSHIP ON DATABASE CO2_DB TO ROLE CO2_ROLE;

-- Warehouses
CREATE OR REPLACE WAREHOUSE CO2_WH WAREHOUSE_SIZE = XSMALL, AUTO_SUSPEND = 300, AUTO_RESUME= TRUE;
GRANT OWNERSHIP ON WAREHOUSE CO2_WH TO ROLE CO2_ROLE;

-- ----------------------------------------------------------------------------
-- Create the database level objects
-- ----------------------------------------------------------------------------
USE ROLE CO2_ROLE;
USE WAREHOUSE CO2_WH;
USE DATABASE CO2_DB;

-- Schemas
CREATE OR REPLACE SCHEMA INTEGRATIONS;
CREATE OR REPLACE SCHEMA RAW_CO2;
CREATE OR REPLACE SCHEMA Harmonized_CO2;
CREATE OR REPLACE SCHEMA Analytics_CO2;

CREATE OR REPLACE SCHEMA DEV_SCHEMA;
CREATE OR REPLACE SCHEMA PROD_SCHEMA;



CREATE OR REPLACE STAGE RAW_CO2.CO2_EXTERNAL_STAGE  
URL = 's3://bigdata2025assignment3/co2_daily.csv'
CREDENTIALS = (AWS_KEY_ID = 'AKIAZPPGAAEKCP7YN7TM' 
AWS_SECRET_KEY = '7vERWy3Zl/Gec2xRcJuIJ8rCCyJip9PuJrWqQQCe');
 
-- Secrets (schema level)
CREATE OR REPLACE SECRET DEMO_GITHUB_SECRET
  TYPE = password
  USERNAME = $GITHUB_SECRET_USERNAME
  PASSWORD = $GITHUB_SECRET_PASSWORD;

-- API Integration (account level)
USE ROLE ACCOUNTADMIN;

CREATE OR REPLACE API INTEGRATION DEMO_GITHUB_API_INTEGRATION
  API_PROVIDER = GIT_HTTPS_API
  API_ALLOWED_PREFIXES = ($GITHUB_URL_PREFIX)
  ALLOWED_AUTHENTICATION_SECRETS = (DEMO_GITHUB_SECRET)
  ENABLED = TRUE;

-- Git Repository
CREATE OR REPLACE GIT REPOSITORY DEMO_GIT_REPO
  API_INTEGRATION = DEMO_GITHUB_API_INTEGRATION
  GIT_CREDENTIALS = DEMO_GITHUB_SECRET
  ORIGIN = $GITHUB_REPO_ORIGIN;


CREATE OR REPLACE TABLE RAW_CO2.Daily_Measurements (
date STRING ,
co2_ppm FLOAT);

COPY INTO RAW_CO2.Daily_Measurements
    FROM @RAW_CO2.CO2_EXTERNAL_STAGE
    FILE_FORMAT = (
        TYPE = CSV 
        SKIP_HEADER = 1
        FIELD_OPTIONALLY_ENCLOSED_BY = '"'
    )
    ON_ERROR = CONTINUE;

CREATE OR REPLACE STREAM RAW_CO2.DAILY_MEASUREMENTS_STREAM ON TABLE RAW_CO2.DAILY_MEASUREMENTS;

USE ROLE ACCOUNTADMIN;

CREATE EVENT TABLE CO2_DB.INTEGRATIONS.DEMO_EVENTS;
GRANT SELECT ON EVENT TABLE CO2_DB.INTEGRATIONS.DEMO_EVENTS TO ROLE CO2_ROLE;
GRANT INSERT ON EVENT TABLE CO2_DB.INTEGRATIONS.DEMO_EVENTS TO ROLE CO2_ROLE;

ALTER ACCOUNT SET EVENT_TABLE = CO2_DB.INTEGRATIONS.DEMO_EVENTS;
ALTER DATABASE CO2_DB SET LOG_LEVEL = INFO;